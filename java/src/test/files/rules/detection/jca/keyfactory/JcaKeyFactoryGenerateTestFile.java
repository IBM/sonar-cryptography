import javax.crypto.spec.DHPrivateKeySpec;
import java.math.BigInteger;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;

public class JcaKeyFactoryGenerateTestFile {

    public void test() throws NoSuchAlgorithmException, InvalidKeySpecException {
        KeyFactory factory = KeyFactory.getInstance("RSA"); // Noncompliant {{(Key) RSA}}
        factory.generatePrivate(new DHPrivateKeySpec(
                new BigInteger("1"),
                new BigInteger
                new BigInteger("3")));
    }

}