services:
  sonarqube:
    image: sonarqube:latest
    user: "${UID}"
    volumes:
      - sonar-data:/opt/sonarqube/data
      - ./.SonarQube/plugins/:/opt/sonarqube/extensions/plugins/
      - sonar-logs:/opt/sonarqube/logs
      - ./.SonarQube/conf/:/opt/sonarqube/conf/
    ports:
      - "9000:9000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    command:
      - "-Dsonar.es.bootstrap.checks.disable=true"
  db:
    image: postgres:15-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar-postgresql:/var/lib/postgresql
      - sonar-postgresql_data:/var/lib/postgresql/data
volumes:
  sonar-logs:
  sonar-data:
  sonar-postgresql:
  sonar-postgresql_data: